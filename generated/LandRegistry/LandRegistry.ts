// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class LandRegistered extends ethereum.Event {
  get params(): LandRegistered__Params {
    return new LandRegistered__Params(this);
  }
}

export class LandRegistered__Params {
  _event: LandRegistered;

  constructor(event: LandRegistered) {
    this._event = event;
  }

  get landId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get plotCoords(): string {
    return this._event.parameters[1].value.toString();
  }

  get area(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get status(): i32 {
    return this._event.parameters[4].value.toI32();
  }
}

export class LandRegistrationVerified extends ethereum.Event {
  get params(): LandRegistrationVerified__Params {
    return new LandRegistrationVerified__Params(this);
  }
}

export class LandRegistrationVerified__Params {
  _event: LandRegistrationVerified;

  constructor(event: LandRegistrationVerified) {
    this._event = event;
  }

  get landId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get status(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get verifiedBy(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class LandTransferRegistered extends ethereum.Event {
  get params(): LandTransferRegistered__Params {
    return new LandTransferRegistered__Params(this);
  }
}

export class LandTransferRegistered__Params {
  _event: LandTransferRegistered;

  constructor(event: LandTransferRegistered) {
    this._event = event;
  }

  get landId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get status(): i32 {
    return this._event.parameters[3].value.toI32();
  }
}

export class LandTransferVerified extends ethereum.Event {
  get params(): LandTransferVerified__Params {
    return new LandTransferVerified__Params(this);
  }
}

export class LandTransferVerified__Params {
  _event: LandTransferVerified;

  constructor(event: LandTransferVerified) {
    this._event = event;
  }

  get landId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get status(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get verifiedBy(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class UserRegistered extends ethereum.Event {
  get params(): UserRegistered__Params {
    return new UserRegistered__Params(this);
  }
}

export class UserRegistered__Params {
  _event: UserRegistered;

  constructor(event: UserRegistered) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get role(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class LandRegistry__landTransfersResult {
  value0: BigInt;
  value1: Address;
  value2: Address;
  value3: Address;
  value4: i32;

  constructor(
    value0: BigInt,
    value1: Address,
    value2: Address,
    value3: Address,
    value4: i32
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    map.set(
      "value4",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value4))
    );
    return map;
  }
}

export class LandRegistry__landsResult {
  value0: BigInt;
  value1: string;
  value2: BigInt;
  value3: Address;
  value4: Address;
  value5: i32;

  constructor(
    value0: BigInt,
    value1: string,
    value2: BigInt,
    value3: Address,
    value4: Address,
    value5: i32
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    map.set(
      "value5",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value5))
    );
    return map;
  }
}

export class LandRegistry extends ethereum.SmartContract {
  static bind(address: Address): LandRegistry {
    return new LandRegistry("LandRegistry", address);
  }

  currentLandId(): BigInt {
    let result = super.call("currentLandId", "currentLandId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_currentLandId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "currentLandId",
      "currentLandId():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  landTransfers(param0: BigInt): LandRegistry__landTransfersResult {
    let result = super.call(
      "landTransfers",
      "landTransfers(uint256):(uint256,address,address,address,uint8)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new LandRegistry__landTransfersResult(
      result[0].toBigInt(),
      result[1].toAddress(),
      result[2].toAddress(),
      result[3].toAddress(),
      result[4].toI32()
    );
  }

  try_landTransfers(
    param0: BigInt
  ): ethereum.CallResult<LandRegistry__landTransfersResult> {
    let result = super.tryCall(
      "landTransfers",
      "landTransfers(uint256):(uint256,address,address,address,uint8)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new LandRegistry__landTransfersResult(
        value[0].toBigInt(),
        value[1].toAddress(),
        value[2].toAddress(),
        value[3].toAddress(),
        value[4].toI32()
      )
    );
  }

  lands(param0: BigInt): LandRegistry__landsResult {
    let result = super.call(
      "lands",
      "lands(uint256):(uint256,string,uint256,address,address,uint8)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new LandRegistry__landsResult(
      result[0].toBigInt(),
      result[1].toString(),
      result[2].toBigInt(),
      result[3].toAddress(),
      result[4].toAddress(),
      result[5].toI32()
    );
  }

  try_lands(param0: BigInt): ethereum.CallResult<LandRegistry__landsResult> {
    let result = super.tryCall(
      "lands",
      "lands(uint256):(uint256,string,uint256,address,address,uint8)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new LandRegistry__landsResult(
        value[0].toBigInt(),
        value[1].toString(),
        value[2].toBigInt(),
        value[3].toAddress(),
        value[4].toAddress(),
        value[5].toI32()
      )
    );
  }

  superAdmin(): Address {
    let result = super.call("superAdmin", "superAdmin():(address)", []);

    return result[0].toAddress();
  }

  try_superAdmin(): ethereum.CallResult<Address> {
    let result = super.tryCall("superAdmin", "superAdmin():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  verifiedAdmins(param0: Address): boolean {
    let result = super.call(
      "verifiedAdmins",
      "verifiedAdmins(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try_verifiedAdmins(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "verifiedAdmins",
      "verifiedAdmins(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  verifiedUsers(param0: Address): boolean {
    let result = super.call("verifiedUsers", "verifiedUsers(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_verifiedUsers(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "verifiedUsers",
      "verifiedUsers(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _superAdmin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class RegisterLandCall extends ethereum.Call {
  get inputs(): RegisterLandCall__Inputs {
    return new RegisterLandCall__Inputs(this);
  }

  get outputs(): RegisterLandCall__Outputs {
    return new RegisterLandCall__Outputs(this);
  }
}

export class RegisterLandCall__Inputs {
  _call: RegisterLandCall;

  constructor(call: RegisterLandCall) {
    this._call = call;
  }

  get _plotCoords(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _area(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RegisterLandCall__Outputs {
  _call: RegisterLandCall;

  constructor(call: RegisterLandCall) {
    this._call = call;
  }
}

export class RegisterLandTransferCall extends ethereum.Call {
  get inputs(): RegisterLandTransferCall__Inputs {
    return new RegisterLandTransferCall__Inputs(this);
  }

  get outputs(): RegisterLandTransferCall__Outputs {
    return new RegisterLandTransferCall__Outputs(this);
  }
}

export class RegisterLandTransferCall__Inputs {
  _call: RegisterLandTransferCall;

  constructor(call: RegisterLandTransferCall) {
    this._call = call;
  }

  get _landId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RegisterLandTransferCall__Outputs {
  _call: RegisterLandTransferCall;

  constructor(call: RegisterLandTransferCall) {
    this._call = call;
  }
}

export class RegisterUserCall extends ethereum.Call {
  get inputs(): RegisterUserCall__Inputs {
    return new RegisterUserCall__Inputs(this);
  }

  get outputs(): RegisterUserCall__Outputs {
    return new RegisterUserCall__Outputs(this);
  }
}

export class RegisterUserCall__Inputs {
  _call: RegisterUserCall;

  constructor(call: RegisterUserCall) {
    this._call = call;
  }

  get _addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _role(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class RegisterUserCall__Outputs {
  _call: RegisterUserCall;

  constructor(call: RegisterUserCall) {
    this._call = call;
  }
}

export class VerifyLandRegistrationCall extends ethereum.Call {
  get inputs(): VerifyLandRegistrationCall__Inputs {
    return new VerifyLandRegistrationCall__Inputs(this);
  }

  get outputs(): VerifyLandRegistrationCall__Outputs {
    return new VerifyLandRegistrationCall__Outputs(this);
  }
}

export class VerifyLandRegistrationCall__Inputs {
  _call: VerifyLandRegistrationCall;

  constructor(call: VerifyLandRegistrationCall) {
    this._call = call;
  }

  get _landId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _status(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class VerifyLandRegistrationCall__Outputs {
  _call: VerifyLandRegistrationCall;

  constructor(call: VerifyLandRegistrationCall) {
    this._call = call;
  }
}

export class VerifyLandTransferCall extends ethereum.Call {
  get inputs(): VerifyLandTransferCall__Inputs {
    return new VerifyLandTransferCall__Inputs(this);
  }

  get outputs(): VerifyLandTransferCall__Outputs {
    return new VerifyLandTransferCall__Outputs(this);
  }
}

export class VerifyLandTransferCall__Inputs {
  _call: VerifyLandTransferCall;

  constructor(call: VerifyLandTransferCall) {
    this._call = call;
  }

  get _landId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _status(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class VerifyLandTransferCall__Outputs {
  _call: VerifyLandTransferCall;

  constructor(call: VerifyLandTransferCall) {
    this._call = call;
  }
}
